import org.apache.tools.ant.filters.ReplaceTokens

/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
 * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */

apply plugin: 'org.hibernate.orm.build.database-bundles'

ext {
        db = project.hasProperty('db') ? project.getProperty('db') : 'h2'
}

databases {
        def dbHost = System.getProperty( 'dbHost', 'localhost' )
        def dbService = System.getProperty( 'dbService', '' )

        availableDatabases {
                h2 {
                        dialect = "org.hibernate.dialect.H2Dialect"
                        driver = "org.h2.Driver"
                        url = "jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE"
                        username = "sa"
                }
                hsqldb {
                        dialect = "org.hibernate.dialect.HSQLDialect"
                        driver = "org.hsqldb.jdbc.JDBCDriver"
                        url = "jdbc:hsqldb:mem:test"
                        username = "sa"
                }
                derby {
                        dialect = "org.hibernate.dialect.DerbyDialect"
                        driver = "org.apache.derby.iapi.jdbc.AutoloadedDriver"
                        url = "jdbc:derby:target/tmp/derby/hibernate_orm_test;databaseName=hibernate_orm_test;create=true"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                        initSql = "CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.locks.waitTimeout', '10')"
                }
                derby_old {
                        dialect = "org.hibernate.dialect.DerbyDialect"
                        driver = "org.apache.derby.jdbc.EmbeddedDriver"
                        url = "jdbc:derby:target/tmp/derby/hibernate_orm_test;databaseName=hibernate_orm_test;create=true"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                        initSql = "CALL SYSCS_UTIL.SYSCS_SET_DATABASE_PROPERTY('derby.locks.waitTimeout', '10')"
                }
                pgsql {
                        dialect = "org.hibernate.dialect.PostgreSQLDialect"
                        driver = "org.postgresql.Driver"
                        // Disable prepared statement caching due to https://www.postgresql.org/message-id/CAEcMXhmmRd4-%2BNQbnjDT26XNdUoXdmntV9zdr8%3DTu8PL9aVCYg%40mail.gmail.com
                        url = "jdbc:postgresql://${dbHost}/hibernate_orm_test?preparedStatementCacheQueries=0&escapeSyntaxCallMode=callIfNoReturn"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                pgsql_ci {
                        dialect = "org.hibernate.dialect.PostgreSQLDialect"
                        driver = "org.postgresql.Driver"
                        // Disable prepared statement caching due to https://www.postgresql.org/message-id/CAEcMXhmmRd4-%2BNQbnjDT26XNdUoXdmntV9zdr8%3DTu8PL9aVCYg%40mail.gmail.com
                        url = "jdbc:postgresql://${dbHost}/hibernate_orm_test?preparedStatementCacheQueries=0&escapeSyntaxCallMode=callIfNoReturn"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                edb_ci {
                        dialect = "org.hibernate.dialect.PostgresPlusDialect"
                        driver = "org.postgresql.Driver"
                        // Disable prepared statement caching due to https://www.postgresql.org/message-id/CAEcMXhmmRd4-%2BNQbnjDT26XNdUoXdmntV9zdr8%3DTu8PL9aVCYg%40mail.gmail.com
                        url = "jdbc:postgresql://${dbHost}/hibernate_orm_test?preparedStatementCacheQueries=0&escapeSyntaxCallMode=callIfNoReturn"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                sybase_ci {
                        dialect = "org.hibernate.dialect.SybaseASEDialect"
                        driver = "net.sourceforge.jtds.jdbc.Driver"
                        // Disable prepared statement caching to avoid issues with changing schemas
                        url = "jdbc:jtds:sybase://${dbHost}:9000/hibernate_orm_test;maxStatements=0;cacheMetaData=false"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                        initSql = "set ansinull on"
                }
                sybase_jconn_ci {
                        dialect = "org.hibernate.dialect.SybaseASEDialect"
                        driver = "com.sybase.jdbc4.jdbc.SybDriver"
                        // Disable prepared statement caching to avoid issues with changing schemas
                        url = "jdbc:sybase:Tds:${dbHost}:9000/hibernate_orm_test"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                        initSql = "set ansinull on set quoted_identifier on"
                }
                mysql {
                        dialect = "org.hibernate.dialect.MySQLDialect"
                        driver = "com.mysql.cj.jdbc.Driver"
                        url = "jdbc:mysql://${dbHost}/hibernate_orm_test"
                        username = "hibernateormtest"
                        password = "hibernateormtest"
                }
                mysql_ci {
                        dialect = "org.hibernate.dialect.MySQLDialect"
                        driver = "com.mysql.cj.jdbc.Driver"
                        url = "jdbc:mysql://${dbHost}/hibernate_orm_test?allowPublicKeyRetrieval=true"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                mariadb {
                        dialect = "org.hibernate.dialect.MariaDBDialect"
                        driver = "org.mariadb.jdbc.Driver"
                        url = "jdbc:mariadb://${dbHost}/hibernate_orm_test"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                mariadb_ci {
                        dialect = "org.hibernate.dialect.MariaDBDialect"
                        driver = "org.mariadb.jdbc.Driver"
                        url = "jdbc:mariadb://${dbHost}/hibernate_orm_test"
                        username = "root"
                        password = "hibernate_orm_test"
                }
                tidb {
                        dialect = "org.hibernate.dialect.TiDBDialect"
                        driver = "com.mysql.jdbc.Driver"
                        url = "jdbc:mysql://${dbHost}:4000/hibernate_orm_test"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                oracle {
                        dialect = "org.hibernate.dialect.OracleDialect"
                        driver = "oracle.jdbc.OracleDriver"
                        url = "jdbc:oracle:thin:@${dbHost}:1521/xepdb1?oracle.jdbc.ReadTimeout=10000"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                oracle_ci {
                        dialect = "org.hibernate.dialect.OracleDialect"
                        driver = "oracle.jdbc.OracleDriver"
                        url = "jdbc:oracle:thin:@${dbHost}:1521/xepdb1?oracle.jdbc.ReadTimeout=10000"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                oracle_legacy_ci {
                        dialect = "org.hibernate.dialect.OracleDialect"
                        driver = "oracle.jdbc.OracleDriver"
                        // For 11 version that doesn't have any XEPDB1 database service
                        url = "jdbc:oracle:thin:@${dbHost}:1521/XE?oracle.jdbc.ReadTimeout=10000"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                oracle_cloud_autonomous_tls {
                        dialect = "org.hibernate.dialect.OracleDialect"
                        driver = "oracle.jdbc.OracleDriver"
                        // Requires dbHost (pointing to the right cloud region) AND dbService (unique database name).
                        //
                        // To avoid hibernate-spatial tests failure, JVM must be enabled as stated in documentation:
                        // https://docs.oracle.com/en/cloud/paas/autonomous-database/adbsa/autonomous-oracle-java.html
                        url = 'jdbc:oracle:thin:@(description=(retry_count=20)(retry_delay=3)(address=(protocol=tcps)(port=1521)(host=' +
                                dbHost + '.oraclecloud.com))(connect_data=(service_name=' + dbService + '_low.adb.oraclecloud.com))(security=(ssl_server_dn_match=yes)))'
                        username = "hibernate_orm_test"
                        password = "Oracle_19_Password"
                }
                mssql {
                        dialect = "org.hibernate.dialect.SQLServerDialect"
                        driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"
                        url = "jdbc:sqlserver://${dbHost};instance=SQLEXPRESS;databaseName=hibernate_orm_test;trustServerCertificate=true"
                        username = "hibernate_orm_test"
                        password = "hibernate_orm_test"
                }
                mssql_ci {
                        dialect = "org.hibernate.dialect.SQLServerDialect"
                        driver = "com.microsoft.sqlserver.jdbc.SQLServerDriver"
                        url = "jdbc:sqlserver://${dbHost};databaseName=hibernate_orm_test;sendTimeAsDatetime=false;trustServerCertificate=true"
                        username = "sa"
                        password = "hibernate_orm_test"
                }
                informix {
                        dialect = "org.hibernate.dialect.InformixDialect"
                        driver = "com.informix.jdbc.IfxDriver"
                        url = "jdbc:informix-sqli://${dbHost}:9088/sysuser:INFORMIXSERVER=dev;user=informix;password=in4mix"
                        username = "informix"
                        password = "in4mix"
                }
                db2 {
                        dialect = "org.hibernate.dialect.DB2Dialect"
                        driver = "com.ibm.db2.jcc.DB2Driver"
                        url = "jdbc:db2://${dbHost}:50000/orm_test"
                        username = "db2inst1"
                        password = "db2inst1-pwd"
                }
                db2_ci {
                        dialect = "org.hibernate.dialect.DB2Dialect"
                        driver = "com.ibm.db2.jcc.DB2Driver"
                        url = "jdbc:db2://${dbHost}:50000/orm_test"
                        username = "orm_test"
                        password = "orm_test"
                }
                hana_cloud {
                        dialect = "org.hibernate.dialect.HANAColumnStoreDialect"
                        driver = "com.sap.db.jdbc.Driver"
                        // Disable prepared statement caching due to https://help.sap.com/viewer/0eec0d68141541d1b07893a39944924e/2.0.04/en-US/78f2163887814223858e4369d18e2847.html
                        url = "jdbc:sap://${dbHost}:443/?encrypt=true&validateCertificate=false&statementCacheSize=0"
                        username = "HIBERNATE_TEST"
                        password = "H1bernate_test"
                }
                hana_ci {
                        dialect = "org.hibernate.dialect.HANAColumnStoreDialect"
                        driver = "com.sap.db.jdbc.Driver"
                        // Disable prepared statement caching due to https://help.sap.com/viewer/0eec0d68141541d1b07893a39944924e/2.0.04/en-US/78f2163887814223858e4369d18e2847.html
                        url = "jdbc:sap://${dbHost}:39017/?statementCacheSize=0"
                        username = "SYSTEM"
                        password = "H1bernate_test"
                }
                cockroachdb {
                        dialect = "org.hibernate.dialect.CockroachDialect"
                        // CockroachDB uses the same pgwire protocol as PostgreSQL, so the driver is the same.
                        driver = "org.postgresql.Driver"
                        // Disable prepared statement caching due to https://www.postgresql.org/message-id/CAEcMXhmmRd4-%2BNQbnjDT26XNdUoXdmntV9zdr8%3DTu8PL9aVCYg%40mail.gmail.com
                        url = "jdbc:postgresql://${dbHost}:26257/defaultdb?sslmode=disable&preparedStatementCacheQueries=0&escapeSyntaxCallMode=callIfNoReturn"
                        username = "root"
                }
                firebird {
                        dialect = "org.hibernate.community.dialect.FirebirdDialect"
                        driver = "org.firebirdsql.jdbc.FBDriver"
                        // Overriding default transaction definition (5 seconds instead of infinite wait) to prevent problems in test cleanup
                        // Expects alias 'hibernate_orm_test' in aliases.conf (FB2.5 and earlier) or databases.conf (FB3.0 and later)
                        // Created database must either use default character set NONE, or UTF8 with page size 16384 or higher (to prevent issues with indexes due to keysize)
                        url = "jdbc:firebirdsql://${dbHost}/hibernate_orm_test?charSet=utf-8;TRANSACTION_READ_COMMITTED=read_committed,rec_version,wait,lock_timeout=5"
                        username = "sysdba"
                        password = "masterkey"
                }
        }

        testingDatabase = project.ext.db
}


ext {
        // assume "callers" only ever use the effective one
        dbBundle = [
                project.ext.db,
                databases.testingDatabase.get().settings
        ]
}
