import org.apache.tools.ant.filters.ReplaceTokens

/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
 * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */

// build a map of the database settings to use.
ext {
        db = project.hasProperty('db') ? project.getProperty('db') : 'h2'
        def dbHost = System.getProperty( 'dbHost', 'localhost' )
        dbBundle = [
                h2 : [
                        'db.dialect' : 'org.hibernate.dialect.H2Dialect',
                        'jdbc.driver': 'org.h2.Driver',
                        'jdbc.user'  : 'sa',
                        'jdbc.pass'  : '',
                        'jdbc.url'   : 'jdbc:h2:mem:db1;DB_CLOSE_DELAY=-1;LOCK_TIMEOUT=10000',
                ],
                hsqldb : [
                        'db.dialect' : 'org.hibernate.dialect.HSQLDialect',
                        'jdbc.driver': 'org.hsqldb.jdbc.JDBCDriver',
                        'jdbc.user'  : 'sa',
                        'jdbc.pass'  : '',
                        'jdbc.url'   : 'jdbc:hsqldb:mem:test'
                ],
                derby : [
                        'db.dialect' : 'org.hibernate.dialect.DerbyDialect',
                        'jdbc.driver': 'org.apache.derby.jdbc.EmbeddedDriver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:derby:target/tmp/derby/hibernate_orm_test;databaseName=hibernate_orm_test;create=true'
                ],
                pgsql : [
                        'db.dialect' : 'org.hibernate.dialect.PostgreSQLDialect',
                        'jdbc.driver': 'org.postgresql.Driver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:postgresql:hibernate_orm_test'
                ],
                pgsql_docker : [
                        'db.dialect' : 'org.hibernate.dialect.PostgreSQLDialect',
                        'jdbc.driver': 'org.postgresql.Driver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:postgresql://127.0.0.1/hibernate_orm_test'
                ],
                pgsql_ci : [
                        'db.dialect' : 'org.hibernate.dialect.PostgreSQLDialect',
                        'jdbc.driver': 'org.postgresql.Driver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:postgresql://' + dbHost + '/hibernate_orm_test'
                ],
                mysql : [
                        'db.dialect' : 'org.hibernate.dialect.MySQLDialect',
                        'jdbc.driver': 'com.mysql.jdbc.Driver',
                        'jdbc.user'  : 'hibernateormtest',
                        'jdbc.pass'  : 'hibernateormtest',
                        'jdbc.url'   : 'jdbc:mysql://localhost/hibernate_orm_test'
                ],
                mysql_docker : [
                        'db.dialect' : 'org.hibernate.dialect.MySQLDialect',
                        'jdbc.driver': 'com.mysql.jdbc.Driver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:mysql://127.0.0.1/hibernate_orm_test?useSSL=false'
                ],
                mariadb : [
                        'db.dialect' : 'org.hibernate.dialect.MariaDBDialect',
                        'jdbc.driver': 'org.mariadb.jdbc.Driver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:mariadb://127.0.0.1/hibernate_orm_test'
                ],
                mariadb_ci : [
                        'db.dialect' : 'org.hibernate.dialect.MariaDBDialect',
                        'jdbc.driver': 'org.mariadb.jdbc.Driver',
                        'jdbc.user'  : 'root',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:mariadb://' + dbHost + '/hibernate_orm_test'
                ],
                postgis : [
                        'db.dialect' : 'org.hibernate.spatial.dialect.postgis.PostgisPG95Dialect',
                        'jdbc.driver': 'org.postgresql.Driver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:postgresql:hibernate_orm_test'
                ],
                oracle : [
                        'db.dialect' : 'org.hibernate.dialect.OracleDialect',
                        'jdbc.driver': 'oracle.jdbc.OracleDriver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:oracle:thin:@localhost:1521/xe'
                ],
                // Uses the default settings for using https://hub.docker.com/_/oracle-database-enterprise-edition
                // After registering to get access (see instructions at above link), start it for testing with:
                // docker run --ulimit memlock=-1:-1 -it --rm=true --memory-swappiness=0 --name ORCLCDB -p 1521:1521 store/oracle/database-enterprise:12.2.0.1-slim
                oracle_docker : [
                        'db.dialect' : 'org.hibernate.dialect.OracleDialect',
                        'jdbc.driver': 'oracle.jdbc.OracleDriver',
                        'jdbc.user'  : 'sys as sysdba',
                        'jdbc.pass'  : 'Oradoc_db1',
                        'jdbc.url'   : 'jdbc:oracle:thin:@localhost:1521:ORCLCDB'
                ],
                oracle_ci : [
                        'db.dialect' : 'org.hibernate.dialect.OracleDialect',
                        'jdbc.driver': 'oracle.jdbc.OracleDriver',
                        'jdbc.user'  : 'SYSTEM',
                        'jdbc.pass'  : 'Oracle18',
                        'jdbc.url'   : 'jdbc:oracle:thin:@' + dbHost + ':1521:XE'
                ],
                mssql : [
                        'db.dialect' : 'org.hibernate.dialect.SQLServerDialect',
                        'jdbc.driver': 'com.microsoft.sqlserver.jdbc.SQLServerDriver',
                        'jdbc.user'  : 'hibernate_orm_test',
                        'jdbc.pass'  : 'hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:sqlserver://localhost;instance=SQLEXPRESS;databaseName=hibernate_orm_test'
                ],
                mssql_ci : [
                        'db.dialect' : 'org.hibernate.dialect.SQLServerDialect',
                        'jdbc.driver': 'com.microsoft.sqlserver.jdbc.SQLServerDriver',
                        'jdbc.user'  : 'sa',
                        'jdbc.pass'  : 'Hibernate_orm_test',
                        'jdbc.url'   : 'jdbc:sqlserver://' + dbHost + ';databaseName=hibernate_orm_test'
                ],
                informix : [
                        'db.dialect' : 'org.hibernate.dialect.InformixDialect',
                        'jdbc.driver': 'com.informix.jdbc.IfxDriver',
                        'jdbc.user'  : 'informix',
                        'jdbc.pass'  : 'in4mix',
                        'jdbc.url'   : 'jdbc:informix-sqli://127.0.0.1:9088/sysuser:INFORMIXSERVER=dev;user=informix;password=in4mix'
                ],
                db2 : [
                        'db.dialect' : 'org.hibernate.dialect.DB2Dialect',
                        'jdbc.driver': 'com.ibm.db2.jcc.DB2Driver',
                        'jdbc.user'  : 'db2inst1',
                        'jdbc.pass'  : 'db2inst1-pwd',
                        'jdbc.url'   : 'jdbc:db2://127.0.0.1:50000/hibern8'
                ],
                db2_ci : [
                        'db.dialect' : 'org.hibernate.dialect.DB2Dialect',
                        'jdbc.driver': 'com.ibm.db2.jcc.DB2Driver',
                        'jdbc.user'  : 'orm_test',
                        'jdbc.pass'  : 'orm_test',
                        'jdbc.url'   : 'jdbc:db2://' + dbHost + ':50000/orm_test'
                ],
                hana : [
                        'db.dialect' : 'org.hibernate.dialect.HANAColumnStoreDialect',
                        'jdbc.driver': 'com.sap.db.jdbc.Driver',
                        'jdbc.user'  : 'HIBERNATE_TEST',
                        'jdbc.pass'  : 'H1bernate_test',
                        'jdbc.url'   : 'jdbc:sap://localhost:30015/'
                ],
                hana_cloud : [
                        'db.dialect' : 'org.hibernate.dialect.HANACloudColumnStoreDialect',
                        'jdbc.driver': 'com.sap.db.jdbc.Driver',
                        'jdbc.user'  : 'HIBERNATE_TEST',
                        'jdbc.pass'  : 'H1bernate_test',
                        'jdbc.url'   : 'jdbc:sap://localhost:443/?encrypt=true&validateCertificate=false'
                ],
                hana_vlad : [
                        'db.dialect' : 'org.hibernate.dialect.HANAColumnStoreDialect',
                        'jdbc.driver': 'com.sap.db.jdbc.Driver',
                        'jdbc.user'  : 'VLAD',
                        'jdbc.pass'  : 'V1ad_test',
                        'jdbc.url'   : 'jdbc:sap://localhost:39015/'
                ],
                cockroachdb : [
                        'db.dialect' : 'org.hibernate.dialect.CockroachDialect',
                        // CockroachDB uses the same pgwire protocol as PostgreSQL, so the driver is the same.
                        'jdbc.driver': 'org.postgresql.Driver',
                        'jdbc.user'  : 'root',
                        'jdbc.pass'  : '',
                        'jdbc.url'   : 'jdbc:postgresql://localhost:26257/defaultdb?sslmode=disable'
                ],
        ]
}


def processTestResourcesTask = project.tasks.findByName( 'processTestResources' )
if ( processTestResourcesTask != null ) {
        processTestResourcesTask.inputs.property( 'db', db )
        processTestResourcesTask.filter( ReplaceTokens, tokens: dbBundle[db] )
}