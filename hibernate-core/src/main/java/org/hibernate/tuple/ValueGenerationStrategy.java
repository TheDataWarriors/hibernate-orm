/*
 * Hibernate, Relational Persistence for Idiomatic Java
 *
 * License: GNU Lesser General Public License (LGPL), version 2.1 or later.
 * See the lgpl.txt file in the root directory or <http://www.gnu.org/licenses/lgpl-2.1.html>.
 */
package org.hibernate.tuple;

import java.io.Serializable;

/**
 * Describes the generation of values of a certain field or property of an entity. A generated
 * value might be generated in Java, or by the database. Every instance must implement either
 * {@link InMemoryValueGenerationStrategy} or {@link InDatabaseValueGenerationStrategy}
 * depending on whether values are generated in Java code, or by the database.
 * <ul>
 * <li>Java value generation is the responsibility of an associated {@link ValueGenerator}.
 *	   In this case, the generated value is written to the database just like any other field
 *	   or property value.
 * <li>A value generated by the database might be generated implicitly, by a trigger, or using
 *	   a {@code default} column value specified in DDL, for example, or it might be generated
 *	   by a SQL expression occurring explicitly in the SQL {@code insert} or {@code update}
 *	   statement. In this case, the generated value is retrieved from the database using a SQL
 *	   {@code select}.
 * </ul>
 * If an implementation of {@code ValueGenerationStrategy} may be associated with an entity
 * via a {@linkplain org.hibernate.annotations.ValueGenerationType custom annotation}, it
 * should implement {@link AnnotationValueGenerationStrategy}.
 *
 * @see org.hibernate.annotations.ValueGenerationType
 * @see org.hibernate.annotations.Generated
 * @see org.hibernate.annotations.GeneratorType
 *
 * @author Steve Ebersole
 * @author Gavin King
 *
 * @since 6.2
 */
public interface ValueGenerationStrategy extends Serializable {
	/**
	 * Specifies that the property value is generated:
	 * <ul>
	 * <li>{@linkplain GenerationTiming#INSERT when the entity is inserted},
	 * <li>{@linkplain GenerationTiming#UPDATE when the entity is updated},
	 * <li>{@linkplain GenerationTiming#ALWAYS whenever the entity is inserted or updated}, or
	 * <li>{@linkplain GenerationTiming#NEVER never}.
	 * </ul>
	 *
	 * @return The {@link GenerationTiming} specifying when the value is generated.
	 */
	GenerationTiming getGenerationTiming();

	/**
	 * Determines if the property value is generated in Java, or by the database.
	 * @return {@code true} if the value is generated by the database, or false if it is
	 *		 generated in Java using a {@link ValueGenerator}.
	 */
	boolean generatedByDatabase();
}
